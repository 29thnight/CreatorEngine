Dynamic_CPP/Assets/Shaders\AutoExposureHistogram.cs.hlsl: LuminanceHistogramData -> b0
Dynamic_CPP/Assets/Shaders\AutoExposureHistogram.cs.hlsl: HDRTexture -> t0
Dynamic_CPP/Assets/Shaders\AutoExposureShared.hlsli: ExposureCB -> b0
Dynamic_CPP/Assets/Shaders\BiliteralFilter.cs.hlsl: BiliteralFilterParams -> b0
Dynamic_CPP/Assets/Shaders\BillBoard.cs.hlsl: CameraConstants -> b0
Dynamic_CPP/Assets/Shaders\BillBoard.ps.hlsl: sparkleTexture -> t0
Dynamic_CPP/Assets/Shaders\BillBoard.ps.hlsl: linearSampler -> s0
Dynamic_CPP/Assets/Shaders\BillBoard.vs.hlsl: ModelConstantBuffer -> b0
Dynamic_CPP/Assets/Shaders\Blit.ps.hlsl: src -> t0
Dynamic_CPP/Assets/Shaders\BloomComposite.ps.hlsl: tex0 -> t0
Dynamic_CPP/Assets/Shaders\BloomComposite.ps.hlsl: tex1 -> t1
Dynamic_CPP/Assets/Shaders\BloomComposite.ps.hlsl: CompositeParams -> b0
Dynamic_CPP/Assets/Shaders\BloomDownSample.cs.hlsl: BloomDownSampleParams -> b0
Dynamic_CPP/Assets/Shaders\BloomExtract.cs.hlsl: BloomBuffer -> b0
Dynamic_CPP/Assets/Shaders\BloomThresholdDownsample.cs.hlsl: linearClampToBorder -> s3
Dynamic_CPP/Assets/Shaders\BloomThresholdDownsample.cs.hlsl: ThresholdParams -> b0
Dynamic_CPP/Assets/Shaders\BloomUpSample.cs.hlsl: BloomUpSampleParams -> b0
Dynamic_CPP/Assets/Shaders\ColorGrading.ps.hlsl: ColorGradingCBuffer -> b0
Dynamic_CPP/Assets/Shaders\ColorGrading.ps.hlsl: ColorGradingParams -> b1
Dynamic_CPP/Assets/Shaders\ColorModule.cs.hlsl: ColorParams -> b0
Dynamic_CPP/Assets/Shaders\CustomUIShader.ps.hlsl: UIBuffer -> b1
Dynamic_CPP/Assets/Shaders\CustomUIShader.ps.hlsl: Diffuse -> t0
Dynamic_CPP/Assets/Shaders\CustomUIShader.ps.hlsl: Samp -> s0
Dynamic_CPP/Assets/Shaders\Dash.ps.hlsl: g_trailTexture -> t0
Dynamic_CPP/Assets/Shaders\Dash.ps.hlsl: g_dissolveTexture -> t1
Dynamic_CPP/Assets/Shaders\Dash.ps.hlsl: g_dissolveTexture2 -> t2
Dynamic_CPP/Assets/Shaders\Dash.ps.hlsl: g_backgroundTexture -> t3
Dynamic_CPP/Assets/Shaders\Dash.ps.hlsl: g_linearSampler -> s0
Dynamic_CPP/Assets/Shaders\Decal.ps.hlsl: PS_CONSTANT_BUFFER -> b0
Dynamic_CPP/Assets/Shaders\Decal.ps.hlsl: PS_DECAL_BUFFER -> b1
Dynamic_CPP/Assets/Shaders\Decal.ps.hlsl: g_depthTexture -> t0
Dynamic_CPP/Assets/Shaders\Decal.ps.hlsl: g_albedoTexture -> t1
Dynamic_CPP/Assets/Shaders\Decal.ps.hlsl: g_normalTexture -> t2
Dynamic_CPP/Assets/Shaders\Decal.ps.hlsl: g_ormTexture -> t3
Dynamic_CPP/Assets/Shaders\Decal.ps.hlsl: g_decalTexture -> t4
Dynamic_CPP/Assets/Shaders\Decal.ps.hlsl: g_decalNormalTexture -> t5
Dynamic_CPP/Assets/Shaders\Decal.ps.hlsl: g_decalORMTexture -> t6
Dynamic_CPP/Assets/Shaders\Decal.ps.hlsl: g_linearSampler -> s0
Dynamic_CPP/Assets/Shaders\Decal.ps.hlsl: g_pointSampler -> s1
Dynamic_CPP/Assets/Shaders\Decal.vs.hlsl: PerObject -> b0
Dynamic_CPP/Assets/Shaders\Decal.vs.hlsl: PerFrame -> b1
Dynamic_CPP/Assets/Shaders\Decal.vs.hlsl: PerApplication -> b2
Dynamic_CPP/Assets/Shaders\Deferred.ps.hlsl: DeferredCBuffer -> b3
Dynamic_CPP/Assets/Shaders\Deferred.ps.hlsl: DepthTexture -> t0
Dynamic_CPP/Assets/Shaders\Deferred.ps.hlsl: Diffuse -> t1
Dynamic_CPP/Assets/Shaders\Deferred.ps.hlsl: MetalRough -> t2
Dynamic_CPP/Assets/Shaders\Deferred.ps.hlsl: Normals -> t3
Dynamic_CPP/Assets/Shaders\Deferred.ps.hlsl: AO -> t5
Dynamic_CPP/Assets/Shaders\Deferred.ps.hlsl: EnvMap -> t6
Dynamic_CPP/Assets/Shaders\Deferred.ps.hlsl: PrefilteredSpecMap -> t7
Dynamic_CPP/Assets/Shaders\Deferred.ps.hlsl: BrdfLUT -> t8
Dynamic_CPP/Assets/Shaders\Deferred.ps.hlsl: Emissive -> t9
Dynamic_CPP/Assets/Shaders\DownDualFiltering.cs.hlsl: params -> b0
Dynamic_CPP/Assets/Shaders\Edgefilter.cs.hlsl: Params -> b0
Dynamic_CPP/Assets/Shaders\Forward.ps.hlsl: Albedo -> t0
Dynamic_CPP/Assets/Shaders\Forward.ps.hlsl: NormalMap -> t1
Dynamic_CPP/Assets/Shaders\Forward.ps.hlsl: OcclusionRoughnessMetal -> t2
Dynamic_CPP/Assets/Shaders\Forward.ps.hlsl: AoMap -> t3
Dynamic_CPP/Assets/Shaders\Forward.ps.hlsl: Emissive -> t5
Dynamic_CPP/Assets/Shaders\Forward.ps.hlsl: EnvMap -> t6
Dynamic_CPP/Assets/Shaders\Forward.ps.hlsl: PrefilteredSpecMap -> t7
Dynamic_CPP/Assets/Shaders\Forward.ps.hlsl: BrdfLUT -> t8
Dynamic_CPP/Assets/Shaders\Forward.ps.hlsl: baseColorTexture -> t15
Dynamic_CPP/Assets/Shaders\Forward.ps.hlsl: baseNormalTexture -> t16
Dynamic_CPP/Assets/Shaders\Forward.ps.hlsl: MatrixBuffer -> b12
Dynamic_CPP/Assets/Shaders\Forward.ps.hlsl: PBRMaterial -> b0
Dynamic_CPP/Assets/Shaders\Forward.ps.hlsl: ForwardCBuffer -> b3
Dynamic_CPP/Assets/Shaders\FXAA.cs.hlsl: FxaaParameters -> b0
Dynamic_CPP/Assets/Shaders\GaussianBlur.cs.hlsl: BlurParams -> b0
Dynamic_CPP/Assets/Shaders\GBuffer.ps.hlsl: Albedo -> t0
Dynamic_CPP/Assets/Shaders\GBuffer.ps.hlsl: NormalMap -> t1
Dynamic_CPP/Assets/Shaders\GBuffer.ps.hlsl: OcclusionRoughnessMetal -> t2
Dynamic_CPP/Assets/Shaders\GBuffer.ps.hlsl: AoMap -> t3
Dynamic_CPP/Assets/Shaders\GBuffer.ps.hlsl: Emissive -> t5
Dynamic_CPP/Assets/Shaders\GBuffer.ps.hlsl: LayerAlbedo -> t6
Dynamic_CPP/Assets/Shaders\GBuffer.ps.hlsl: SplatTexture -> t7
Dynamic_CPP/Assets/Shaders\GBuffer.ps.hlsl: SplatMapArray -> t7
Dynamic_CPP/Assets/Shaders\GBuffer.ps.hlsl: PBRMaterial -> b0
Dynamic_CPP/Assets/Shaders\GBuffer.ps.hlsl: TerrainLayerConstants -> b12
Dynamic_CPP/Assets/Shaders\GenerateColorGradingLUT.cs.hlsl: ColorGradingParams -> b0
Dynamic_CPP/Assets/Shaders\gg.ps.hlsl: gDiffuseTexture -> t0
Dynamic_CPP/Assets/Shaders\gg.ps.hlsl: gEmissionTexture -> t1
Dynamic_CPP/Assets/Shaders\gg.ps.hlsl: gDissolveTexture -> t2
Dynamic_CPP/Assets/Shaders\gg.ps.hlsl: gSmokeTexture -> t3
Dynamic_CPP/Assets/Shaders\gg.ps.hlsl: gLinearSampler -> s0
Dynamic_CPP/Assets/Shaders\gg.ps.hlsl: gPointSampler -> s1
Dynamic_CPP/Assets/Shaders\ggg.ps.hlsl: gDiffuseTexture -> t0
Dynamic_CPP/Assets/Shaders\ggg.ps.hlsl: gEmissionTexture -> t1
Dynamic_CPP/Assets/Shaders\ggg.ps.hlsl: gDissolveTexture -> t2
Dynamic_CPP/Assets/Shaders\ggg.ps.hlsl: gSmokeTexture -> t3
Dynamic_CPP/Assets/Shaders\ggg.ps.hlsl: gLinearSampler -> s0
Dynamic_CPP/Assets/Shaders\ggg.ps.hlsl: gPointSampler -> s1
Dynamic_CPP/Assets/Shaders\Gizmo_billboard.gs.hlsl: CameraBuffer -> b0
Dynamic_CPP/Assets/Shaders\Gizmo_billboard.gs.hlsl: BillboardSize -> b1
Dynamic_CPP/Assets/Shaders\Gizmo_billboard.ps.hlsl: gTexture -> t0
Dynamic_CPP/Assets/Shaders\Gizmo_Line.vs.hlsl: CameraBuffer -> b0
Dynamic_CPP/Assets/Shaders\Grid.ps.hlsl: UniformBuffer -> b0
Dynamic_CPP/Assets/Shaders\Grid.ps.hlsl: cameraPos -> b1
Dynamic_CPP/Assets/Shaders\Grid.vs.hlsl: GridConstantBuffer -> b0
Dynamic_CPP/Assets/Shaders\Grid.vs.hlsl: cameraPos -> b1
Dynamic_CPP/Assets/Shaders\IndirectLightMap.cs.hlsl: CB_Lightmap -> b0
Dynamic_CPP/Assets/Shaders\IndirectLightMap.cs.hlsl: CB -> b1
Dynamic_CPP/Assets/Shaders\IndirectLightMap.cs.hlsl: transform -> b2
Dynamic_CPP/Assets/Shaders\IndirectLightMap.cs.hlsl: CB_Hammersley_Sample -> b3
Dynamic_CPP/Assets/Shaders\InstancedVertexShader.vs.hlsl: PerFrame -> b1
Dynamic_CPP/Assets/Shaders\InstancedVertexShader.vs.hlsl: PerApplication -> b2
Dynamic_CPP/Assets/Shaders\IrradianceMap.ps.hlsl: CubeMap -> t0
Dynamic_CPP/Assets/Shaders\LifeModule.cs.hlsl: TimeParams -> b0
Dynamic_CPP/Assets/Shaders\Lighting.hlsli: ShadowMap -> t4
Dynamic_CPP/Assets/Shaders\Lighting.hlsli: ShadowMapArr -> t4
Dynamic_CPP/Assets/Shaders\Lighting.hlsli: CloudShadowMap -> t10
Dynamic_CPP/Assets/Shaders\Lighting.hlsli: LightProperties -> b1
Dynamic_CPP/Assets/Shaders\Lighting.hlsli: LightCount -> b11
Dynamic_CPP/Assets/Shaders\Lighting.hlsli: ShadowMapConstants -> b2
Dynamic_CPP/Assets/Shaders\Lighting.hlsli: CloudShadowMapConstants -> b4
Dynamic_CPP/Assets/Shaders\Lighting.hlsli: CameraView -> b10
Dynamic_CPP/Assets/Shaders\Lightmap.cs.hlsl: EnvMap -> t4
Dynamic_CPP/Assets/Shaders\Lightmap.cs.hlsl: AoMap -> t5
Dynamic_CPP/Assets/Shaders\Lightmap.cs.hlsl: lightMapSetting -> b0
Dynamic_CPP/Assets/Shaders\Lightmap.cs.hlsl: CB -> b1
Dynamic_CPP/Assets/Shaders\Lightmap.cs.hlsl: transform -> b2
Dynamic_CPP/Assets/Shaders\Lightmap.ps.hlsl: PBRMaterial -> b0
Dynamic_CPP/Assets/Shaders\Lightmap.ps.hlsl: CB -> b1
Dynamic_CPP/Assets/Shaders\Lightmap.ps.hlsl: Albedo -> t0
Dynamic_CPP/Assets/Shaders\Lightmap.ps.hlsl: Normals -> t1
Dynamic_CPP/Assets/Shaders\Lightmap.ps.hlsl: OcclusionRoughnessMetal -> t2
Dynamic_CPP/Assets/Shaders\Lightmap.ps.hlsl: AO -> t3
Dynamic_CPP/Assets/Shaders\Lightmap.ps.hlsl: Emissive -> t5
Dynamic_CPP/Assets/Shaders\LightmapEdgeCover.cs.hlsl: litSample -> s0
Dynamic_CPP/Assets/Shaders\Material.hlsli: Diffuse -> t0
Dynamic_CPP/Assets/Shaders\Material.hlsli: NormalMap -> t1
Dynamic_CPP/Assets/Shaders\Material.hlsli: Specular -> t2
Dynamic_CPP/Assets/Shaders\Material.hlsli: Material -> b0
Dynamic_CPP/Assets/Shaders\MeshColorModule.cs.hlsl: ColorParams -> b0
Dynamic_CPP/Assets/Shaders\MeshMovementModule.cs.hlsl: MeshMovementParams -> b0
Dynamic_CPP/Assets/Shaders\MeshParticle.ps.hlsl: gDiffuseTexture -> t0
Dynamic_CPP/Assets/Shaders\MeshParticle.ps.hlsl: gLinearSampler -> s0
Dynamic_CPP/Assets/Shaders\MeshParticle.ps.hlsl: gPointSampler -> s1
Dynamic_CPP/Assets/Shaders\MeshParticle.vs.hlsl: MeshConstantBuffer -> b0
Dynamic_CPP/Assets/Shaders\MeshParticleClipping.ps.hlsl: PolarClippingParams -> b2
Dynamic_CPP/Assets/Shaders\MeshParticleClipping.ps.hlsl: TimeParams -> b3
Dynamic_CPP/Assets/Shaders\MeshParticleClipping.ps.hlsl: gDiffuseTexture -> t0
Dynamic_CPP/Assets/Shaders\MeshParticleClipping.ps.hlsl: gLinearSampler -> s0
Dynamic_CPP/Assets/Shaders\MeshParticleClipping.ps.hlsl: gPointSampler -> s1
Dynamic_CPP/Assets/Shaders\MeshParticleTest.ps.hlsl: gDiffuseTexture -> t0
Dynamic_CPP/Assets/Shaders\MeshParticleTest.ps.hlsl: gDissolveTexture1 -> t1
Dynamic_CPP/Assets/Shaders\MeshParticleTest.ps.hlsl: gDissolveTexture2 -> t2
Dynamic_CPP/Assets/Shaders\MeshParticleTest.ps.hlsl: gEndEffectTexture -> t3
Dynamic_CPP/Assets/Shaders\MeshParticleTest.ps.hlsl: gLinearSampler -> s0
Dynamic_CPP/Assets/Shaders\MeshParticleTest.ps.hlsl: gClampSampler -> s1
Dynamic_CPP/Assets/Shaders\MeshSpawnModule.cs.hlsl: SpawnParameters -> b0
Dynamic_CPP/Assets/Shaders\MeshSpawnModule.cs.hlsl: MeshParticleTemplateParams -> b1
Dynamic_CPP/Assets/Shaders\MovementModule.cs.hlsl: MovementParams -> b0
Dynamic_CPP/Assets/Shaders\PixelShader.ps.hlsl: Diffuse -> t0
Dynamic_CPP/Assets/Shaders\PixelShader.ps.hlsl: NormalMap -> t1
Dynamic_CPP/Assets/Shaders\PixelShader.ps.hlsl: Specular -> t2
Dynamic_CPP/Assets/Shaders\PixelShader.ps.hlsl: Material -> b0
Dynamic_CPP/Assets/Shaders\PositionMap.vs.hlsl: posBuffer -> b0
Dynamic_CPP/Assets/Shaders\RectToCubeMap.ps.hlsl: SkyboxTexture -> t0
Dynamic_CPP/Assets/Shaders\Sampler.hlsli: LinearSampler -> s0
Dynamic_CPP/Assets/Shaders\Sampler.hlsli: PointSampler -> s1
Dynamic_CPP/Assets/Shaders\Sampler.hlsli: ClampSampler -> s2
Dynamic_CPP/Assets/Shaders\ShadowVertexShader.vs.hlsl: PerObject -> b0
Dynamic_CPP/Assets/Shaders\ShadowVertexShader.vs.hlsl: PerFrame -> b1
Dynamic_CPP/Assets/Shaders\ShadowVertexShader.vs.hlsl: PerApplication -> b2
Dynamic_CPP/Assets/Shaders\ShadowVertexShader.vs.hlsl: BoneTransformation -> b3
Dynamic_CPP/Assets/Shaders\ShadowVertexShader.vs.hlsl: PerDraw -> b4
Dynamic_CPP/Assets/Shaders\SizeModule.cs.hlsl: SizeParams -> b0
Dynamic_CPP/Assets/Shaders\Skybox.ps.hlsl: SkyboxTexture -> t0
Dynamic_CPP/Assets/Shaders\Skybox.vs.hlsl: PerObject -> b0
Dynamic_CPP/Assets/Shaders\Skybox.vs.hlsl: PerFrame -> b1
Dynamic_CPP/Assets/Shaders\Skybox.vs.hlsl: PerApplication -> b2
Dynamic_CPP/Assets/Shaders\Sparkle.ps.hlsl: sparkleTexture -> t0
Dynamic_CPP/Assets/Shaders\Sparkle.ps.hlsl: linearSampler -> s0
Dynamic_CPP/Assets/Shaders\SpawnModule.cs.hlsl: SpawnParameters -> b0
Dynamic_CPP/Assets/Shaders\SpawnModule.cs.hlsl: ParticleTemplate -> b1
Dynamic_CPP/Assets/Shaders\SpecularPreFilter.ps.hlsl: SpecularCBuffer -> b0
Dynamic_CPP/Assets/Shaders\SpecularPreFilter.ps.hlsl: SkyboxTexture -> t0
Dynamic_CPP/Assets/Shaders\Sprite.ps.hlsl: Sprite -> t0
Dynamic_CPP/Assets/Shaders\Sprite.ps.hlsl: Sampler -> s0
Dynamic_CPP/Assets/Shaders\SpriteAnimation.ps.hlsl: gTexture -> t0
Dynamic_CPP/Assets/Shaders\SpriteAnimation.ps.hlsl: linearSampler -> s0
Dynamic_CPP/Assets/Shaders\SpriteAnimation.ps.hlsl: SpriteAnimationBuffer -> b0
Dynamic_CPP/Assets/Shaders\SSAO.ps.hlsl: CBuffer -> b3
Dynamic_CPP/Assets/Shaders\SSAO.ps.hlsl: gDepthTex -> t0
Dynamic_CPP/Assets/Shaders\SSAO.ps.hlsl: gNormalTex -> t1
Dynamic_CPP/Assets/Shaders\SSAO.ps.hlsl: gNoise -> t2
Dynamic_CPP/Assets/Shaders\SSAO.ps.hlsl: gColor -> t3
Dynamic_CPP/Assets/Shaders\SSGI.cs.hlsl: SSGIParams -> b0
Dynamic_CPP/Assets/Shaders\SSGIComposite.cs.hlsl: CompositeParams -> b0
Dynamic_CPP/Assets/Shaders\SSR.ps.hlsl: DepthTexture -> t0
Dynamic_CPP/Assets/Shaders\SSR.ps.hlsl: Diffuse -> t1
Dynamic_CPP/Assets/Shaders\SSR.ps.hlsl: MetalRough -> t2
Dynamic_CPP/Assets/Shaders\SSR.ps.hlsl: Normals -> t3
Dynamic_CPP/Assets/Shaders\SSR.ps.hlsl: prevSSR -> t4
Dynamic_CPP/Assets/Shaders\SSR.ps.hlsl: CBuffer -> b0
Dynamic_CPP/Assets/Shaders\SSS.ps.hlsl: DepthTexture -> t0
Dynamic_CPP/Assets/Shaders\SSS.ps.hlsl: Diffuse -> t1
Dynamic_CPP/Assets/Shaders\SSS.ps.hlsl: MetalRough -> t2
Dynamic_CPP/Assets/Shaders\SSS.ps.hlsl: DeferredCBuffer -> b0
Dynamic_CPP/Assets/Shaders\TerrainDebugBrush.ps.hlsl: targetTexture -> t0
Dynamic_CPP/Assets/Shaders\TerrainDebugBrush.ps.hlsl: maskTexture -> t1
Dynamic_CPP/Assets/Shaders\TerrainDebugBrush.ps.hlsl: gBrush -> b0
Dynamic_CPP/Assets/Shaders\TerrainTexture.cs.hlsl: LinearSampler -> s0
Dynamic_CPP/Assets/Shaders\TerrainTexture.cs.hlsl: inputTexture -> t0
Dynamic_CPP/Assets/Shaders\TerrainTexture.cs.hlsl: cBuf -> b0
Dynamic_CPP/Assets/Shaders\TestForward.ps.hlsl: Albedo -> t0
Dynamic_CPP/Assets/Shaders\TestForward.ps.hlsl: NormalMap -> t1
Dynamic_CPP/Assets/Shaders\TestForward.ps.hlsl: OcclusionRoughnessMetal -> t2
Dynamic_CPP/Assets/Shaders\TestForward.ps.hlsl: AoMap -> t3
Dynamic_CPP/Assets/Shaders\TestForward.ps.hlsl: Emissive -> t5
Dynamic_CPP/Assets/Shaders\TestForward.ps.hlsl: EnvMap -> t6
Dynamic_CPP/Assets/Shaders\TestForward.ps.hlsl: PrefilteredSpecMap -> t7
Dynamic_CPP/Assets/Shaders\TestForward.ps.hlsl: BrdfLUT -> t8
Dynamic_CPP/Assets/Shaders\TestForward.ps.hlsl: baseColorTexture -> t15
Dynamic_CPP/Assets/Shaders\TestForward.ps.hlsl: baseNormalTexture -> t16
Dynamic_CPP/Assets/Shaders\TestForward.ps.hlsl: MatrixBuffer -> b12
Dynamic_CPP/Assets/Shaders\TestForward.ps.hlsl: PBRMaterial -> b0
Dynamic_CPP/Assets/Shaders\TestForward.ps.hlsl: ForwardCBuffer -> b3
Dynamic_CPP/Assets/Shaders\TestGBuffer.ps.hlsl: Albedo -> t0
Dynamic_CPP/Assets/Shaders\TestGBuffer.ps.hlsl: NormalMap -> t1
Dynamic_CPP/Assets/Shaders\TestGBuffer.ps.hlsl: OcclusionRoughnessMetal -> t2
Dynamic_CPP/Assets/Shaders\TestGBuffer.ps.hlsl: AoMap -> t3
Dynamic_CPP/Assets/Shaders\TestGBuffer.ps.hlsl: Emissive -> t5
Dynamic_CPP/Assets/Shaders\TestGBuffer.ps.hlsl: LayerAlbedo -> t6
Dynamic_CPP/Assets/Shaders\TestGBuffer.ps.hlsl: SplatTexture -> t7
Dynamic_CPP/Assets/Shaders\TestGBuffer.ps.hlsl: SplatMapArray -> t7
Dynamic_CPP/Assets/Shaders\TestGBuffer.ps.hlsl: PBRMaterial -> b0
Dynamic_CPP/Assets/Shaders\TestGBuffer.ps.hlsl: TerrainLayerConstants -> b12
Dynamic_CPP/Assets/Shaders\TestGBuffer.ps.hlsl: TestCB -> b13
Dynamic_CPP/Assets/Shaders\ToneMapACES.ps.hlsl: Colour -> t0
Dynamic_CPP/Assets/Shaders\ToneMapACES.ps.hlsl: UseTonemap -> b0
Dynamic_CPP/Assets/Shaders\ToneMapReinhard.ps.hlsl: Colour -> t0
Dynamic_CPP/Assets/Shaders\TrailMeshGenerate.cs.hlsl: TrailMeshParams -> b0
Dynamic_CPP/Assets/Shaders\TrailMeshGenerate.cs.hlsl: g_vertices -> u1
Dynamic_CPP/Assets/Shaders\TrailMeshGenerate.cs.hlsl: g_indices -> u2
Dynamic_CPP/Assets/Shaders\TrailPixel.ps.hlsl: g_trailTexture -> t0
Dynamic_CPP/Assets/Shaders\TrailPixel.ps.hlsl: g_linearSampler -> s0
Dynamic_CPP/Assets/Shaders\TrailVertex.vs.hlsl: TrailConstantBuffer -> b0
Dynamic_CPP/Assets/Shaders\UI.ps.hlsl: Sprite -> t0
Dynamic_CPP/Assets/Shaders\UI.vs.hlsl: PerObject -> b0
Dynamic_CPP/Assets/Shaders\UI.vs.hlsl: PerFrame -> b1
Dynamic_CPP/Assets/Shaders\UI.vs.hlsl: PerApplication -> b2
Dynamic_CPP/Assets/Shaders\UpDualFiltering.cs.hlsl: params -> b0
Dynamic_CPP/Assets/Shaders\VertexShader.vs.hlsl: PerObject -> b0
Dynamic_CPP/Assets/Shaders\VertexShader.vs.hlsl: PerFrame -> b1
Dynamic_CPP/Assets/Shaders\VertexShader.vs.hlsl: PerApplication -> b2
Dynamic_CPP/Assets/Shaders\VertexShader.vs.hlsl: BoneTransformation -> b3
Dynamic_CPP/Assets/Shaders\Vignette.ps.hlsl: VignetteCBuffer -> b0
Dynamic_CPP/Assets/Shaders\VolumetricFog.cs.hlsl: SamplerLinearClamp -> s0
Dynamic_CPP/Assets/Shaders\VolumetricFog.cs.hlsl: SamplerLinearWrap -> s1
Dynamic_CPP/Assets/Shaders\VolumetricFog.cs.hlsl: CascadedPcfShadowMapSampler -> s2
Dynamic_CPP/Assets/Shaders\VolumetricFog.cs.hlsl: VolumetricFogCBuffer -> b0
Dynamic_CPP/Assets/Shaders\VolumetricFog.cs.hlsl: CloudShadowMapConstants -> b1
Dynamic_CPP/Assets/Shaders\VolumetricFog.cs.hlsl: LightProperties -> b2
Dynamic_CPP/Assets/Shaders\VolumetricFogAccumulation.cs.hlsl: SamplerLinear -> s0
Dynamic_CPP/Assets/Shaders\VolumetricFogAccumulation.cs.hlsl: CascadedPcfShadowMapSampler -> s2
Dynamic_CPP/Assets/Shaders\VolumetricFogAccumulation.cs.hlsl: VolumetricFogCBuffer -> b0
Dynamic_CPP/Assets/Shaders\VolumetricFogComposite.ps.hlsl: VolumetricFogCompositeCBuffer -> b0
Dynamic_CPP/Assets/Shaders\WireFrame.vs.hlsl: PerObject -> b0
Dynamic_CPP/Assets/Shaders\WireFrame.vs.hlsl: PerFrame -> b1
Dynamic_CPP/Assets/Shaders\WireFrame.vs.hlsl: PerApplication -> b2
Dynamic_CPP/Assets/Shaders\WireFrame.vs.hlsl: BoneTransformation -> b3
Dynamic_CPP/Assets/Shaders\WireFrame.vs.hlsl: CameraPos -> b4
